[["index.html", "Pre-Lecture 13 Reading", " Pre-Lecture 13 Reading Before the lecture you should read: 8.3 Confidence Intervals for Population Variances 8.3.1 Confidence Interval for the Population Variance When Sampling from a Normal Population 8.3.2 Confidence Interval for the Ratio of Population Variances "],["mentimeter-link.html", "Mentimeter Link", " Mentimeter Link Mentimeter Link "],["example-8-19.html", "Example 8-19", " Example 8-19 Use R, either via RStudio on your own device or this online console. # These functions may be useful library(lattice) names(barley) qqnorm() qqline() mean() sd() var() qt() qchisq() Solution library(lattice) BarleyYield1932 &lt;- barley$yield[barley$year==&quot;1932&quot;] #Same result as... #BarleyYield1932 &lt;- subset(barley, select = yield, subset = year == &quot;1932&quot;, drop = TRUE) # To check normality of the sample... qqnorm(BarleyYield1932) qqline(BarleyYield1932) #(a) Construct a 95% confidence interval for Î¼, the mean barley yield in 1932. n &lt;- sum(!is.na(BarleyYield1932)) #Count of the number of non-missing values, i.e. NOT &quot;NA&quot; values xbar &lt;- mean(BarleyYield1932) xsd &lt;- sd(BarleyYield1932) CT &lt;- qt(0.975, n - 1) xbar + c(-1, 1) * CT * xsd/sqrt(n) # Eqn 8.10 [1] 29.33907 34.18759 # To construct the confidence interval directly with R: t.test(BarleyYield1932, conf.level = 0.95)$conf [1] 29.33907 34.18759 attr(,&quot;conf.level&quot;) [1] 0.95 # (b) Construct a 95% confidence interval for (2, the variance of barley yield in 1932. s2 &lt;- var(BarleyYield1932) lchi &lt;- qchisq(0.025, n - 1) uchi &lt;- qchisq(0.975, n - 1) c(s2, lchi, uchi) [1] 88.06803 39.66186 82.11741 ll &lt;- (n - 1) * s2/uchi # Eqn 8.26 ul &lt;- (n - 1) * s2/lchi # Eqn 8.26 CI &lt;- c(ll, ul) CI [1] 63.27543 131.00782 # For full solutions see textbook/lecture slides "],["example-8-21.html", "Example 8-21", " Example 8-21 Use R, either via RStudio on your own device or this online console. # These functions may be useful library(PASWR2) names(APPLE) qqnorm() qqline() var() qf() Solution library(PASWR2) names(APPLE) [1] &quot;hardness&quot; &quot;location&quot; hardness.fresh &lt;- APPLE$hardness[APPLE$location==&quot;fresh&quot;] hardness.warehouse &lt;- APPLE$hardness[APPLE$location==&quot;warehouse&quot;] # To check normality of the sample... qqnorm(hardness.fresh) qqline(hardness.fresh) qqnorm(hardness.warehouse) qqline(hardness.warehouse) # Construct a 95% confidence interval for the ratio of the variances. VAR &lt;- c(var(hardness.fresh),var(hardness.warehouse)) VAR [1] 1.510438 1.790951 # Same result as... # VAR &lt;- tapply(APPLE$hardness, APPLE$location, var) RVAR &lt;- VAR[2]/VAR[1] #Ratio of larger variance to smaller variance names(RVAR) &lt;- NULL lf &lt;- qf(0.025, 16, 16) # lower f value uf &lt;- qf(0.975, 16, 16) # upper f value c(lf, uf, RVAR) [1] 0.3621405 2.7613591 1.1857165 lep &lt;- lf*RVAR # lower CI end point from Eqn 8.31 uep &lt;- uf*RVAR # upper CI end point from Eqn 8.31 CI &lt;- c(lep, uep) CI [1] 0.429396 3.274189 # using var.test() levels(APPLE$location) # show default levels of location [1] &quot;fresh&quot; &quot;warehouse&quot; APPLE$location &lt;- factor(APPLE$location, levels = c(&quot;warehouse&quot;, &quot;fresh&quot;)) #Reverses the order so the maximum variance appears first levels(APPLE$location) # changed levels of location [1] &quot;warehouse&quot; &quot;fresh&quot; var.test(hardness ~ location, data = APPLE)$conf [1] 0.429396 3.274189 attr(,&quot;conf.level&quot;) [1] 0.95 # For full solutions see textbook/lecture slides "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
