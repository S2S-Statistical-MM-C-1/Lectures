.libPaths("C:/Users/mtb3f/OneDrive - University of Glasgow/RStudio and ShinyApps/R/win-library/4.0")
temp.data <- c(NA,6.83,7.01,7.03,6.88,7.06,7.28,5.79,6.00,6.25,6.23,6.13,6.25,6.48,5.77,6.28,6.53,6.81,6.36,6.55,6.59,6.14,6.65,6.83,7.07,6.58,6.86,6.92)
years <- c("2017", "2018", "2019")
sites <- c("Site 1", "Site 2", "Site 3", "Site 4")
temp.table <- matrix(temp.data, ncol=7, byrow=TRUE)
dimnames(temp.table) <- list(sites, years)
View(temp.table)
years <- c("2015", "2016", "2017", "2018", "2019", "2020", "2021")
dimnames(temp.table) <- list(sites, years)
library(webexercises)
?webexercise
?webexercises
data(package='webexercises')
data(package="webexercises")
data('webexercises')
?data
library(PASWR2)
data(package='PASWR2')
head(CALCULUS)
head(EURD)
head(EURD)
help("EURD")
help"APPLE"
help("APPLE")
help("FCD")
help("SWIMTIMES")
data("SWIMTIMES")
View(SWIMTIMES)
str(SWIMTIMES)
levels(SWIMTIMES$seconds) <- c("high", "low")
str(SWIMTIMES)
data("SWIMTIMES")
levels(SWIMTIMES$diet) <- c("high", "low")
str(SWIMTIMES)
subset(x = SWIMTIMES, subset = (SWIMTIMES$diet == "high"))
apply(X = subset(x = SWIMTIMES, subset = (SWIMTIMES$diet == "high")), MARGIN = 2, FUN = mean)
subset(x = SWIMTIMES, subset = (SWIMTIMES$diet == "high"))
subset(x = SWIMTIMES$seconds, subset = (SWIMTIMES$diet == "high"))
apply(X = subset(x = SWIMTIMES$seconds, subset = (SWIMTIMES$diet == "high")), MARGIN = 2, FUN = mean)
include_graphics("Images/notes.png")
apply(X = births, MARGIN = 2, FUN = sd)
data <- c(5033, 4899, 4683, 6852, 6548, 6553, 2402, 2337, 2260, 1493, 1488, 1417)
births <- matrix(data = data, nrow = 4, byrow = TRUE)
cities <- c("Edinburgh", "Glasgow", "Aberdeen", "Dundee")
years <- c("2017", "2018", "2019")
dimnames(births) <- list(cities, years)
births
apply(X = births, MARGIN = 2, FUN = sd)
letters
?marix
?matrix
matrix(data = letters, nrow = 5)
?solve
data <- c(5033, 4899, 4683, 6852, 6548, 6553, 2402, 2337, 2260, 1493, 1488, 1417)
births <- matrix(data = data, nrow = 4, byrow = TRUE)
cities <- c("Edinburgh", "Glasgow", "Aberdeen", "Dundee")
years <- c("2017", "2018", "2019")
dimnames(births) <- list(cities, years)
births
apply(X = births, MARGIN = 2, FUN = sd)
apply(X = births, MARGIN = 2, FUN = sd)[3]
apply(X = births, MARGIN = 2, FUN = sd)[2, 3]
data(package = "PASWR2")
?apply
X <- matrix(data = c(2, 4, -1, 3, 2, 2, 1, 2, -1), nrow = 3, byrow = TRUE)
y <- matrix(data = c(1, 1, 3), nrow = 3, byrow = TRUE)
X%*%y
z <- matrix(data = c(3, 11, 0), nrow = 3, byrow = TRUE)
solve(X, z)
inv(X)
?inv()
??inverse
solve(X)
?solve
solve(X)
